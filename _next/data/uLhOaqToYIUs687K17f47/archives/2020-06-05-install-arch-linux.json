{"pageProps":{"post":{"slug":"2020-06-05-install-arch-linux","title":"Install Arch Linux","categories":["Diary"],"ogImage":"https://koka831.github.io/img/icon.png","tags":["Linux"],"content":"<h2 id=\"0-partition-table\"><a href=\"#0-partition-table\">0. Partition Table</a></h2>\n<p>インストール先のディスク名を調べる.</p>\n<div class=\"remark-highlight\"><pre data-file=\"terminal\" class=\"language-shell-session\"><code class=\"language-shell-session\"><span class=\"token command\"><span class=\"token shell-symbol important\">$</span><span class=\"token bash language-bash\"><span class=\"token function\">fdisk</span> -l</span></span>\n<span class=\"token output\">bar</span>\n</code></pre></div>\n<p>[[info | custom container]]\n| content\n| bar</p>\n<p>multi line</p>\n<h2 id=\"1-reset-partition\"><a href=\"#1-reset-partition\">1. Reset Partition</a></h2>\n<ul>\n<li>cgdisk/sgdiskを使う\n<ul>\n<li>cgdiskがcursesベースなので使いやすい</li>\n</ul>\n</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-shell-session\"><code class=\"language-shell-session\"><span class=\"token command\"><span class=\"token shell-symbol important\">$</span><span class=\"token bash language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$EDITOR</span></span></span>\n<span class=\"token output\">vim</span>\n<span class=\"token output\"></span><span class=\"token command\"><span class=\"token shell-symbol important\">$</span><span class=\"token bash language-bash\"><span class=\"token function\">git</span> checkout master</span></span>\n<span class=\"token output\">Switched to branch 'master'</span>\n<span class=\"token output\">Your branch is up-to-date with 'origin/master'</span>\n<span class=\"token output\"></span><span class=\"token command\"><span class=\"token shell-symbol important\">#</span><span class=\"token bash language-bash\">foo</span></span>\n<span class=\"token command\"><span class=\"token shell-symbol important\">$</span><span class=\"token bash language-bash\"><span class=\"token function\">git</span> push</span></span>\n<span class=\"token output\">Everything up-to-date</span>\n<span class=\"token output\">[sudo] password for koka:</span>\n<span class=\"token output\"></span><span class=\"token command\"><span class=\"token shell-symbol important\">$</span><span class=\"token bash language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'All</span>\n<span class=\"token string\">> done!'</span></span></span>\n<span class=\"token output\">All</span>\n<span class=\"token output\">done!</span>\n<span class=\"token output\"></span><span class=\"token command\"><span class=\"token shell-symbol important\">$</span><span class=\"token bash language-bash\">cgdisk /dev/nvme0n1</span></span>\n</code></pre></div>\n<div class=\"remark-highlight\"><pre class=\"language-shell-session\"><code class=\"language-shell-session\"><span class=\"token command\"><span class=\"token shell-symbol important\">$</span> <span class=\"token bash language-bash\"><span class=\"token function\">ls</span> -la</span></span>\n</code></pre></div>\n<p>最低限必要なpartitionは以下の3つ.</p>\n<ul>\n<li>/boot/efi: EFI</li>\n<li>/boot    : Linux FS</li>\n<li>/ (root) : Linux FS</li>\n</ul>\n<p>ブートセクタの開始領域がEFIになっている必要があるので、上から順に設定していく.\n/boot/efiが/bootに入れ子になっているが, mount時に調整する.</p>\n<h3 id=\"efi-partition\"><a href=\"#efi-partition\">EFI partition</a></h3>\n<ul>\n<li>/boot/efi partition\n<ul>\n<li>First Sector: Enter(default)</li>\n<li>Size in sectors: 512M</li>\n<li>Hex code or GUID: ef00</li>\n<li>Enter new partition name: EFI System</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"boot-partition\"><a href=\"#boot-partition\">boot partition</a></h3>\n<ul>\n<li>/boot\n<ul>\n<li>First Sector: Enter(default)</li>\n<li>Size: 512M</li>\n<li>Hex: 8300</li>\n<li>Enter new partition name: Linux filesystem</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"root-partition\"><a href=\"#root-partition\">root partition</a></h3>\n<ul>\n<li>/\n<ul>\n<li>First Sector: Enter(default)</li>\n<li>Size: Enter(default=max)</li>\n<li>Hex: 8300</li>\n<li>Enter new partition name: Linux filesystem</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"result-of-partitioning\"><a href=\"#result-of-partitioning\">Result of partitioning</a></h3>\n<ul>\n<li>512G SSDを対象に行うと以下のようになる.</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-sh\"><code class=\"language-sh\">$ fdisk -l\nDevice          Start   End             Sectors Size    Type\n/dev/nvme0n1p1  2048    1050623         1048576 512M    Efi system\n/dev/nvme0n1p2 1050624  2099199         1048576 512M    Linux filesystem\n/dev/nvme0n1p3  2099200 1000215182    998115983 476G    Linux filesystem</code></pre></div>\n<h2 id=\"2-disk-format\"><a href=\"#2-disk-format\">2. Disk Format</a></h2>\n<p>mkfsを用いて各partitionをフォーマットする.<br>\nefi領域はFAT32指定、その他Linux filesystemの領域はext4等好みのファイルシステムを用いる.</p>\n<div class=\"remark-highlight\"><pre class=\"language-sh\"><code class=\"language-sh\">mkfs.fat -F32 /dev/nvme0n1p1\nmkfs.ext4 /dev/nvme0n1p2\nmkfs.ext4 /dev/nvme0n1p3</code></pre></div>\n<h2 id=\"3-mount-volume\"><a href=\"#3-mount-volume\">3. Mount Volume</a></h2>\n<p>1, 2で作成したpartitionをboot USBからアクセスできるようにマウントする.\n1.で行ったパーティショニングとマウントの順番が異なるので注意(1敗).</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell-session\"><code class=\"language-shell-session\"><span class=\"token command\"><span class=\"token shell-symbol important\">#</span> <span class=\"token bash language-bash\">/root</span></span>\n<span class=\"token command\"><span class=\"token shell-symbol important\">$</span> <span class=\"token bash language-bash\"><span class=\"token function\">mount</span> /dev/nvme0n1p3 /mnt</span></span>\n\n<span class=\"token command\"><span class=\"token shell-symbol important\">#</span> <span class=\"token bash language-bash\">/boot</span></span>\n<span class=\"token command\"><span class=\"token shell-symbol important\">$</span> <span class=\"token bash language-bash\"><span class=\"token function\">mkdir</span> /mnt/boot</span></span>\n<span class=\"token command\"><span class=\"token shell-symbol important\">$</span> <span class=\"token bash language-bash\"><span class=\"token function\">mount</span> /dev/nvme0n1p2 /mnt/boot</span></span>\n\n<span class=\"token command\"><span class=\"token shell-symbol important\">#</span> <span class=\"token bash language-bash\">/boot/efi</span></span>\n<span class=\"token command\"><span class=\"token shell-symbol important\">$</span> <span class=\"token bash language-bash\"><span class=\"token function\">mkdir</span> /mnt/boot/efi</span></span>\n<span class=\"token command\"><span class=\"token shell-symbol important\">$</span> <span class=\"token bash language-bash\"><span class=\"token function\">mount</span> /dev/nvme0n1p1 /mnt/boot/efi</span></span>\n</code></pre></div>\n<h2 id=\"4-install-linux-system\"><a href=\"#4-install-linux-system\">4. Install Linux system</a></h2>\n<h3 id=\"setup-repository-mirror\"><a href=\"#setup-repository-mirror\">Setup repository mirror</a></h3>\n<p><code class=\"language-unknown\">/etc/pacman.d/mirrorlist</code>を編集し現在位置から距離の近いミラーを一番上にもってくる.</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell-session\"><code class=\"language-shell-session\"><span class=\"token command\"><span class=\"token shell-symbol important\">$</span> <span class=\"token bash language-bash\"><span class=\"token function\">vim</span> /etc/pacman.d/mirrorlist</span></span>\n<span class=\"token command\"><span class=\"token shell-symbol important\">#</span> <span class=\"token bash language-bash\">use mirror <span class=\"token keyword\">in</span> Japan</span></span>\n</code></pre></div>\n<h3 id=\"install-base-system\"><a href=\"#install-base-system\">Install base system</a></h3>\n<p>マウントした<code class=\"language-unknown\">/root</code>に対してLinuxやその後の作業に必要な諸々をインストールする.\n後述する5.1でマウント領域に<code class=\"language-unknown\">chroot</code>したあとはboot USB内のデフォルトツール類が使えなくなるので, エディタはここでインストールしておく.</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell-session\"><code class=\"language-shell-session\"><span class=\"token command\"><span class=\"token shell-symbol important\">#</span> <span class=\"token bash language-bash\">linux base system</span></span>\n<span class=\"token output\">pacstrap /mnt base linux linux-firmware</span>\n<span class=\"token output\"></span><span class=\"token command\"><span class=\"token shell-symbol important\">#</span> <span class=\"token bash language-bash\"><span class=\"token keyword\">for</span> wifi</span></span>\n<span class=\"token output\">pacstrap /mnt base-devel grub efibootmgr dosfstools netctl iw wpa_supplicant networkmanager dialog vim</span>\n</code></pre></div>\n<h3 id=\"generate-fstab-file\"><a href=\"#generate-fstab-file\">generate fstab file</a></h3>\n<div class=\"remark-highlight\"><pre class=\"language-sh\"><code class=\"language-sh\">genfstab -U /mnt &#x26;gt;&#x26;gt; /mnt/etc/fstab</code></pre></div>\n<h3 id=\"check-filesystem\"><a href=\"#check-filesystem\">check filesystem</a></h3>\n<div class=\"remark-highlight\"><pre class=\"language-shell-session\"><code class=\"language-shell-session\"><span class=\"token command\"><span class=\"token shell-symbol important\">$</span> <span class=\"token bash language-bash\"><span class=\"token function\">cat</span> /mnt/etc/fstab</span></span>\n<span class=\"token output\">/dev/nvme0n1p3 /         ext4 rw,relatime 0 1</span>\n<span class=\"token output\">/dev/nvme0n1p2 /boot     ext4 rw,relatime 0 2</span>\n<span class=\"token output\">/dev/nvme0n1p1 /boot/efi vfat rw,relatime,fmask=0022,codepage=... 0 2</span>\n</code></pre></div>\n<h2 id=\"5-enter-arch\"><a href=\"#5-enter-arch\">5 enter arch!</a></h2>\n<div class=\"remark-highlight\"><pre class=\"language-shell-session\"><code class=\"language-shell-session\"><span class=\"token output\">arch-chroot /mnt /bin/bash</span>\n</code></pre></div>\n<h3 id=\"setup-localetimezone\"><a href=\"#setup-localetimezone\">Setup locale/timezone</a></h3>\n<div class=\"remark-highlight\"><pre class=\"language-shell-session\"><code class=\"language-shell-session\"><span class=\"token command\"><span class=\"token shell-symbol important\">#</span> <span class=\"token bash language-bash\">locale</span></span>\n<span class=\"token command\"><span class=\"token shell-symbol important\">$</span> <span class=\"token bash language-bash\"><span class=\"token function\">vim</span> /etc/locale.gen</span></span>\n<span class=\"token command\"><span class=\"token shell-symbol important\">#</span> <span class=\"token bash language-bash\">uncomment en_US.UTF-8 and ja_JP.UTF-8</span></span>\n<span class=\"token command\"><span class=\"token shell-symbol important\">$</span> <span class=\"token bash language-bash\">locale-gen</span></span>\n<span class=\"token command\"><span class=\"token shell-symbol important\">$</span> <span class=\"token bash language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"LANG=en_US.UTF-8\"</span> <span class=\"token operator\">></span> /etc/locale.conf</span></span>\n\n<span class=\"token command\"><span class=\"token shell-symbol important\">#</span> <span class=\"token bash language-bash\">timezone</span></span>\n<span class=\"token command\"><span class=\"token shell-symbol important\">$</span> <span class=\"token bash language-bash\">tzselect <span class=\"token number\">4</span>, <span class=\"token number\">19</span>, <span class=\"token number\">1</span></span></span>\n<span class=\"token command\"><span class=\"token shell-symbol important\">$</span> <span class=\"token bash language-bash\">hwclock --systohc --utc</span></span>\n</code></pre></div>\n<h3 id=\"setup-bootloader\"><a href=\"#setup-bootloader\">Setup bootloader</a></h3>\n<p>bootloaderの作成.</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell-session\"><code class=\"language-shell-session\"><span class=\"token command\"><span class=\"token shell-symbol important\">$</span> <span class=\"token bash language-bash\">mkinitcpio -p linux</span></span>\n<span class=\"token command\"><span class=\"token shell-symbol important\">$</span> <span class=\"token bash language-bash\">grub-install --target<span class=\"token operator\">=</span>x86_64-efi --efi-directory<span class=\"token operator\">=</span>/boot/efi --bootloader-id<span class=\"token operator\">=</span>arch --boot-directory<span class=\"token operator\">=</span>/boot/efi/EFI --recheck</span></span>\n<span class=\"token command\"><span class=\"token shell-symbol important\">$</span> <span class=\"token bash language-bash\"><span class=\"token function\">grub-mkconfig</span> -o /boot/efi/EFI/grub/grub.cfg</span></span>\n</code></pre></div>\n<h3 id=\"change-root-password--add-user\"><a href=\"#change-root-password--add-user\">Change Root password &#x26; add User</a></h3>\n<p>5.4にてリブートする前にユーザを作成しておく(1敗).</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell-session\"><code class=\"language-shell-session\"><span class=\"token command\"><span class=\"token shell-symbol important\">$</span> <span class=\"token bash language-bash\"><span class=\"token function\">passwd</span></span></span>\n<span class=\"token command\"><span class=\"token shell-symbol important\">$</span> <span class=\"token bash language-bash\"><span class=\"token function\">useradd</span> -m -g <span class=\"token function\">users</span> -G wheel -s /bin/bash koka</span></span>\n<span class=\"token command\"><span class=\"token shell-symbol important\">$</span> <span class=\"token bash language-bash\"><span class=\"token function\">passwd</span> koka</span></span>\n<span class=\"token command\"><span class=\"token shell-symbol important\">$</span> <span class=\"token bash language-bash\">visudo <span class=\"token comment\"># and uncomment %Wheel all=(all) all</span></span></span>\n</code></pre></div>\n<h3 id=\"reboot--eject-usb\"><a href=\"#reboot--eject-usb\">Reboot &#x26; eject USB</a></h3>\n<p>シャットダウンしてbootUSBを取り外し再起動する</p>\n<h2 id=\"6-setup-arch-linux\"><a href=\"#6-setup-arch-linux\">6. Setup Arch Linux</a></h2>\n<h3 id=\"network\"><a href=\"#network\">network</a></h3>\n<p>wifiの設定.\n<code class=\"language-unknown\">nmtui</code>が好きなのでNetworkManagerを用いた.\nセットアップ後の開発において<code class=\"language-unknown\">systemd-nspawn</code>を使う場合, ネットワークアダプタは<code class=\"language-unknown\">systemd-networkd</code>なのでそっちの場合は<code class=\"language-unknown\">systemd</code>に統一しといたほうが後々楽.</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell-session\"><code class=\"language-shell-session\"><span class=\"token command\"><span class=\"token shell-symbol important\">$</span> <span class=\"token bash language-bash\">systemctl start NetworkManager</span></span>\n<span class=\"token command\"><span class=\"token shell-symbol important\">$</span> <span class=\"token bash language-bash\">systemctl <span class=\"token builtin class-name\">enable</span> NetworkManager</span></span>\n<span class=\"token command\"><span class=\"token shell-symbol important\">$</span> <span class=\"token bash language-bash\">nmtui</span></span>\n</code></pre></div>\n<h3 id=\"setup-x-window-system\"><a href=\"#setup-x-window-system\">Setup X Window System</a></h3>\n<p><a href=\"https://wiki.archlinux.jp/index.php/Xorg\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ref</a>\nCUIからGUIへ.</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell-session\"><code class=\"language-shell-session\"><span class=\"token command\"><span class=\"token shell-symbol important\">$</span> <span class=\"token bash language-bash\">lspci <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> -e VGA -e 3D</span></span>\n<span class=\"token command\"><span class=\"token shell-symbol important\">$</span> <span class=\"token bash language-bash\"><span class=\"token comment\"># XとDMとしてlight DM(とログイン画面)をインストール</span></span></span>\n<span class=\"token command\"><span class=\"token shell-symbol important\">$</span> <span class=\"token bash language-bash\">pacman -S xf86-video-intel xorg-server xorg-xrdb lightdm lightdm-gtk-greeter</span></span>\n<span class=\"token command\"><span class=\"token shell-symbol important\">$</span> <span class=\"token bash language-bash\"><span class=\"token comment\"># terminal emulatorも入ってないので何かしらいれとく(1敗)</span></span></span>\n<span class=\"token command\"><span class=\"token shell-symbol important\">$</span> <span class=\"token bash language-bash\">pacman -S rxvt-unicode</span></span>\n\n<span class=\"token command\"><span class=\"token shell-symbol important\">$</span> <span class=\"token bash language-bash\">systemctl <span class=\"token builtin class-name\">enable</span> lightdm</span></span>\n<span class=\"token command\"><span class=\"token shell-symbol important\">$</span> <span class=\"token bash language-bash\"><span class=\"token comment\"># WMをインストール</span></span></span>\n<span class=\"token command\"><span class=\"token shell-symbol important\">$</span> <span class=\"token bash language-bash\">pacman -S i3-gaps i3status dmenu</span></span>\n<span class=\"token command\"><span class=\"token shell-symbol important\">$</span> <span class=\"token bash language-bash\"><span class=\"token comment\"># tlp/バッテリ最適化モジュール</span></span></span>\n<span class=\"token command\"><span class=\"token shell-symbol important\">$</span> <span class=\"token bash language-bash\">pacman -S tlp</span></span>\n<span class=\"token command\"><span class=\"token shell-symbol important\">$</span> <span class=\"token bash language-bash\"><span class=\"token comment\"># フォント</span></span></span>\n<span class=\"token command\"><span class=\"token shell-symbol important\">$</span> <span class=\"token bash language-bash\"><span class=\"token comment\"># ブラウザやアプリはデフォだとシステム設定のフォント読まずに表示が汚くなるので、</span></span></span>\n<span class=\"token command\"><span class=\"token shell-symbol important\">$</span> <span class=\"token bash language-bash\"><span class=\"token comment\"># デフォ指定に含まれているttf-dejavuを入れとく(Ubuntuのデフォフォント).</span></span></span>\n<span class=\"token command\"><span class=\"token shell-symbol important\">$</span> <span class=\"token bash language-bash\">pacman -S ttf-fira-code oft-ipamjfont ttf-dejavu</span></span>\n<span class=\"token command\"><span class=\"token shell-symbol important\">$</span> <span class=\"token bash language-bash\">pacman -S xorg-xbacklight <span class=\"token comment\"># 画面の明るさ</span></span></span>\n<span class=\"token command\"><span class=\"token shell-symbol important\">$</span> <span class=\"token bash language-bash\">pacman -S pulseaudio-alsa alsa-utils alsa-plugins <span class=\"token comment\"># 音量</span></span></span>\n</code></pre></div>","description":"log","commits":[{"title":"fix:","date":"  Thu Apr 22 01:01:46 2021","hash":"9ff93e8b","diff":"<div class=\"remark-highlight\"><pre data-file=\"9ff93e8b.patch\" class=\"language-git  language-diff\"><code class=\"language-git\"><span class=\"token commit-sha1\">commit 9ff93e8b33def45f9ed5f30ef5f62c4f73384132</span>\nAuthor: koka &#x3C;<a href=\"mailto:koka.code@gmail.com\" class=\"token email-link\">koka.code@gmail.com</a>>\nDate:   Thu Apr 22 01:01:46 2021 +0900\n\n  fix:\n\ndiff --git a/_posts/2020-06-05-install-arch-linux.md b/_posts/2020-06-05-install-arch-linux.md\nnew file mode 100644\nindex 0000000..0bff7c6\n<span class=\"token deleted\">--- /dev/null</span>\n<span class=\"token inserted\">+++ b/_posts/2020-06-05-install-arch-linux.md</span>\n<span class=\"token coord\">@@ -0,0 +1,238 @@</span>\n<span class=\"token inserted\">+---</span>\n<span class=\"token inserted\">+title: 'Install Arch Linux'</span>\n<span class=\"token inserted\">+date: 2020-06-05</span>\n<span class=\"token inserted\">+categories:</span>\n<span class=\"token inserted\">+- Diary</span>\n<span class=\"token inserted\">+tags:</span>\n<span class=\"token inserted\">+- Linux</span>\n<span class=\"token inserted\">+description: log</span>\n<span class=\"token inserted\">+---</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+## 0. Partition Table</span>\n<span class=\"token inserted\">+インストール先のディスク名を調べる.</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+ ```shell-session[data-file=\"terminal\"]</span>\n<span class=\"token inserted\">+$fdisk -l</span>\n<span class=\"token inserted\">+bar</span>\n<span class=\"token inserted\">+ ```</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+[[info | custom container]]</span>\n<span class=\"token inserted\">+| content</span>\n<span class=\"token inserted\">+| bar</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+multi line</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+## 1. Reset Partition</span>\n<span class=\"token inserted\">+- cgdisk/sgdiskを使う</span>\n<span class=\"token inserted\">+    - cgdiskがcursesベースなので使いやすい</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+ ```shell-session</span>\n<span class=\"token inserted\">+$echo $EDITOR</span>\n<span class=\"token inserted\">+vim</span>\n<span class=\"token inserted\">+$git checkout master</span>\n<span class=\"token inserted\">+Switched to branch 'master'</span>\n<span class=\"token inserted\">+Your branch is up-to-date with 'origin/master'</span>\n<span class=\"token inserted\">+#foo</span>\n<span class=\"token inserted\">+$git push</span>\n<span class=\"token inserted\">+Everything up-to-date</span>\n<span class=\"token inserted\">+[sudo] password for koka:</span>\n<span class=\"token inserted\">+$echo 'All</span>\n<span class=\"token inserted\">+> done!'</span>\n<span class=\"token inserted\">+All</span>\n<span class=\"token inserted\">+done!</span>\n<span class=\"token inserted\">+$cgdisk /dev/nvme0n1</span>\n<span class=\"token inserted\">+ ```</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+ ```shell-session</span>\n<span class=\"token inserted\">+$ ls -la</span>\n<span class=\"token inserted\">+ ```</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+最低限必要なpartitionは以下の3つ. </span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+- /boot/efi: EFI</span>\n<span class=\"token inserted\">+- /boot    : Linux FS</span>\n<span class=\"token inserted\">+- / (root) : Linux FS</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+ブートセクタの開始領域がEFIになっている必要があるので、上から順に設定していく.</span>\n<span class=\"token inserted\">+/boot/efiが/bootに入れ子になっているが, mount時に調整する.</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+### EFI partition</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+- /boot/efi partition</span>\n<span class=\"token inserted\">+    - First Sector: Enter(default)</span>\n<span class=\"token inserted\">+    - Size in sectors: 512M</span>\n<span class=\"token inserted\">+    - Hex code or GUID: ef00</span>\n<span class=\"token inserted\">+    - Enter new partition name: EFI System</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+### boot partition</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+- /boot</span>\n<span class=\"token inserted\">+    - First Sector: Enter(default)</span>\n<span class=\"token inserted\">+    - Size: 512M</span>\n<span class=\"token inserted\">+    - Hex: 8300</span>\n<span class=\"token inserted\">+    - Enter new partition name: Linux filesystem</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+### root partition</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+- /</span>\n<span class=\"token inserted\">+    - First Sector: Enter(default)</span>\n<span class=\"token inserted\">+    - Size: Enter(default=max)</span>\n<span class=\"token inserted\">+    - Hex: 8300</span>\n<span class=\"token inserted\">+    - Enter new partition name: Linux filesystem</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+### Result of partitioning</span>\n<span class=\"token inserted\">+- 512G SSDを対象に行うと以下のようになる.</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+ ```sh</span>\n<span class=\"token inserted\">+$ fdisk -l</span>\n<span class=\"token inserted\">+Device          Start   End             Sectors Size    Type</span>\n<span class=\"token inserted\">+/dev/nvme0n1p1  2048    1050623         1048576 512M    Efi system</span>\n<span class=\"token inserted\">+/dev/nvme0n1p2 1050624  2099199         1048576 512M    Linux filesystem</span>\n<span class=\"token inserted\">+/dev/nvme0n1p3  2099200 1000215182    998115983 476G    Linux filesystem</span>\n<span class=\"token inserted\">+ ```</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+## 2. Disk Format</span>\n<span class=\"token inserted\">+mkfsを用いて各partitionをフォーマットする.  </span>\n<span class=\"token inserted\">+efi領域はFAT32指定、その他Linux filesystemの領域はext4等好みのファイルシステムを用いる.</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+ ```sh</span>\n<span class=\"token inserted\">+mkfs.fat -F32 /dev/nvme0n1p1</span>\n<span class=\"token inserted\">+mkfs.ext4 /dev/nvme0n1p2</span>\n<span class=\"token inserted\">+mkfs.ext4 /dev/nvme0n1p3</span>\n<span class=\"token inserted\">+ ```</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+## 3. Mount Volume</span>\n<span class=\"token inserted\">+1, 2で作成したpartitionをboot USBからアクセスできるようにマウントする.</span>\n<span class=\"token inserted\">+1.で行ったパーティショニングとマウントの順番が異なるので注意(1敗).</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+ ```shell-session</span>\n<span class=\"token inserted\">+# /root</span>\n<span class=\"token inserted\">+$ mount /dev/nvme0n1p3 /mnt</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+# /boot</span>\n<span class=\"token inserted\">+$ mkdir /mnt/boot</span>\n<span class=\"token inserted\">+$ mount /dev/nvme0n1p2 /mnt/boot</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+# /boot/efi</span>\n<span class=\"token inserted\">+$ mkdir /mnt/boot/efi</span>\n<span class=\"token inserted\">+$ mount /dev/nvme0n1p1 /mnt/boot/efi</span>\n<span class=\"token inserted\">+ ```</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+## 4. Install Linux system</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+### Setup repository mirror</span>\n<span class=\"token inserted\">+`/etc/pacman.d/mirrorlist`を編集し現在位置から距離の近いミラーを一番上にもってくる.</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+ ```shell-session</span>\n<span class=\"token inserted\">+$ vim /etc/pacman.d/mirrorlist</span>\n<span class=\"token inserted\">+# use mirror in Japan</span>\n<span class=\"token inserted\">+ ```</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+### Install base system</span>\n<span class=\"token inserted\">+マウントした`/root`に対してLinuxやその後の作業に必要な諸々をインストールする.</span>\n<span class=\"token inserted\">+後述する5.1でマウント領域に`chroot`したあとはboot USB内のデフォルトツール類が使えなくなるので, エディタはここでインストールしておく.</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+ ```shell-session</span>\n<span class=\"token inserted\">+# linux base system</span>\n<span class=\"token inserted\">+pacstrap /mnt base linux linux-firmware</span>\n<span class=\"token inserted\">+# for wifi</span>\n<span class=\"token inserted\">+pacstrap /mnt base-devel grub efibootmgr dosfstools netctl iw wpa_supplicant networkmanager dialog vim</span>\n<span class=\"token inserted\">+ ```</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+### generate fstab file</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+ ```sh</span>\n<span class=\"token inserted\">+genfstab -U /mnt >> /mnt/etc/fstab</span>\n<span class=\"token inserted\">+ ```</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+### check filesystem</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+ ```shell-session</span>\n<span class=\"token inserted\">+$ cat /mnt/etc/fstab</span>\n<span class=\"token inserted\">+/dev/nvme0n1p3 /         ext4 rw,relatime 0 1</span>\n<span class=\"token inserted\">+/dev/nvme0n1p2 /boot     ext4 rw,relatime 0 2</span>\n<span class=\"token inserted\">+/dev/nvme0n1p1 /boot/efi vfat rw,relatime,fmask=0022,codepage=... 0 2</span>\n<span class=\"token inserted\">+ ```</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+## 5 enter arch!</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+ ```shell-session</span>\n<span class=\"token inserted\">+arch-chroot /mnt /bin/bash</span>\n<span class=\"token inserted\">+ ```</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+### Setup locale/timezone</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+ ```shell-session</span>\n<span class=\"token inserted\">+# locale</span>\n<span class=\"token inserted\">+$ vim /etc/locale.gen</span>\n<span class=\"token inserted\">+# uncomment en_US.UTF-8 and ja_JP.UTF-8</span>\n<span class=\"token inserted\">+$ locale-gen</span>\n<span class=\"token inserted\">+$ echo \"LANG=en_US.UTF-8\" > /etc/locale.conf</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+# timezone</span>\n<span class=\"token inserted\">+$ tzselect 4, 19, 1</span>\n<span class=\"token inserted\">+$ hwclock --systohc --utc</span>\n<span class=\"token inserted\">+ ```</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+### Setup bootloader</span>\n<span class=\"token inserted\">+bootloaderの作成.</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+ ```shell-session</span>\n<span class=\"token inserted\">+$ mkinitcpio -p linux</span>\n<span class=\"token inserted\">+$ grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=arch --boot-directory=/boot/efi/EFI --recheck</span>\n<span class=\"token inserted\">+$ grub-mkconfig -o /boot/efi/EFI/grub/grub.cfg</span>\n<span class=\"token inserted\">+ ```</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+### Change Root password &#x26; add User</span>\n<span class=\"token inserted\">+5.4にてリブートする前にユーザを作成しておく(1敗).</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+ ```shell-session</span>\n<span class=\"token inserted\">+$ passwd</span>\n<span class=\"token inserted\">+$ useradd -m -g users -G wheel -s /bin/bash koka</span>\n<span class=\"token inserted\">+$ passwd koka</span>\n<span class=\"token inserted\">+$ visudo # and uncomment %Wheel all=(all) all</span>\n<span class=\"token inserted\">+ ```</span>\n<span class=\"token inserted\">+### Reboot &#x26; eject USB</span>\n<span class=\"token inserted\">+シャットダウンしてbootUSBを取り外し再起動する</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+## 6. Setup Arch Linux</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+### network</span>\n<span class=\"token inserted\">+wifiの設定.</span>\n<span class=\"token inserted\">+`nmtui`が好きなのでNetworkManagerを用いた.</span>\n<span class=\"token inserted\">+セットアップ後の開発において`systemd-nspawn`を使う場合, ネットワークアダプタは`systemd-networkd`なのでそっちの場合は`systemd`に統一しといたほうが後々楽.</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+ ```shell-session</span>\n<span class=\"token inserted\">+$ systemctl start NetworkManager</span>\n<span class=\"token inserted\">+$ systemctl enable NetworkManager</span>\n<span class=\"token inserted\">+$ nmtui</span>\n<span class=\"token inserted\">+ ```</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+### Setup X Window System</span>\n<span class=\"token inserted\">+[ref](https://wiki.archlinux.jp/index.php/Xorg)</span>\n<span class=\"token inserted\">+CUIからGUIへ.</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+ ```shell-session</span>\n<span class=\"token inserted\">+$ lspci | grep -e VGA -e 3D</span>\n<span class=\"token inserted\">+$ # XとDMとしてlight DM(とログイン画面)をインストール</span>\n<span class=\"token inserted\">+$ pacman -S xf86-video-intel xorg-server xorg-xrdb lightdm lightdm-gtk-greeter</span>\n<span class=\"token inserted\">+$ # terminal emulatorも入ってないので何かしらいれとく(1敗)</span>\n<span class=\"token inserted\">+$ pacman -S rxvt-unicode</span>\n<span class=\"token inserted\">+</span>\n<span class=\"token inserted\">+$ systemctl enable lightdm</span>\n<span class=\"token inserted\">+$ # WMをインストール</span>\n<span class=\"token inserted\">+$ pacman -S i3-gaps i3status dmenu</span>\n<span class=\"token inserted\">+$ # tlp/バッテリ最適化モジュール</span>\n<span class=\"token inserted\">+$ pacman -S tlp</span>\n<span class=\"token inserted\">+$ # フォント</span>\n<span class=\"token inserted\">+$ # ブラウザやアプリはデフォだとシステム設定のフォント読まずに表示が汚くなるので、</span>\n<span class=\"token inserted\">+$ # デフォ指定に含まれているttf-dejavuを入れとく(Ubuntuのデフォフォント).</span>\n<span class=\"token inserted\">+$ pacman -S ttf-fira-code oft-ipamjfont ttf-dejavu</span>\n<span class=\"token inserted\">+$ pacman -S xorg-xbacklight # 画面の明るさ</span>\n<span class=\"token inserted\">+$ pacman -S pulseaudio-alsa alsa-utils alsa-plugins # 音量</span>\n<span class=\"token inserted\">+ ```</span>\n</code></pre></div>"}],"publishedAt":"Fri Jun 05 2020","updatedAt":"Thu Apr 22 2021"}},"__N_SSG":true}